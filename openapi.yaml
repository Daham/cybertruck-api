openapi: 3.0.1
info:
  title: cybertruck-api
  version: 1.0.0
servers:
  - url: http://localhost:8080
paths:
  /products:
    get:
      tags:
        - product-controller
      summary: Retrieve all products
      operationId: retrieveItem
      parameters:
        - name: rowsPerPage
          in: query
          description: Rows per page
          required: true
          schema:
            type: integer
            format: int32
          example: 10
        - name: param
          in: query
          description: Search param
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved all products
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductsResponseDTO'
    post:
      tags:
        - product-controller
      summary: Create a product
      operationId: createProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreateRequestDto'
        required: true
      responses:
        '201':
          description: Successfully created a product
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductCreateResponseDto'
  /orders:
    post:
      tags:
        - order-controller
      summary: Create an order
      operationId: createOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreateRequestDto'
        required: true
      responses:
        '201':
          description: Successfully created an order
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrderCreateResponseDto'
  /customers:
    get:
      tags:
        - customer-controller
      summary: Retrieve all customers
      operationId: retrieveItem_1
      parameters:
        - name: rowsPerPage
          in: query
          description: Rows per page
          required: true
          schema:
            type: integer
            format: int32
          example: 10
        - name: param
          in: query
          description: Search param
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved all customers
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomersResponseDTO'
    post:
      tags:
        - customer-controller
      summary: Create a customer
      operationId: createCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerCreateRequestDto'
        required: true
      responses:
        '201':
          description: Successfully created a customer
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomerCreateResponseDto'
  /health:
    get:
      tags:
        - health-check-controller
      operationId: health
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HealthComponent'
  /health/status:
    get:
      tags:
        - health-check-controller
      operationId: status
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
components:
  schemas:
    ProductCreateRequestDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: double
      description: Product to create. Cannot null or empty.
    ProductCreateResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: double
    OrderCreateRequestDto:
      type: object
      properties:
        customer_id:
          type: integer
          format: int32
        order_date:
          type: string
          format: date-time
      description: Order to create. Cannot null or empty.
    OrderCreateResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        customer_id:
          type: integer
          format: int32
        order_date:
          type: string
          format: date-time
        total_amount:
          type: number
          format: double
    CustomerCreateRequestDto:
      type: object
      properties:
        email:
          type: string
        address:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        phone_number:
          type: string
      description: Customer to create. Cannot null or empty.
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int32
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        address:
          type: string
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
    CustomerCreateResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        email:
          type: string
        address:
          type: string
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
        first_name:
          type: string
        last_name:
          type: string
        phone_number:
          type: string
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int32
        orderItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        customer:
          $ref: '#/components/schemas/Customer'
        orderDate:
          type: string
          format: date-time
        totalAmount:
          type: number
          format: double
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          format: int32
        order:
          $ref: '#/components/schemas/Order'
        product:
          $ref: '#/components/schemas/Product'
        quantity:
          type: integer
          format: int32
        unitPrice:
          type: number
          format: double
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: double
        orderItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
    ProductsResponseDTO:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        is_has_previous:
          type: boolean
        is_has_next:
          type: boolean
        total:
          type: integer
          format: int64
        page_number:
          type: integer
          format: int32
        next_param:
          type: string
        previous_param:
          type: string
    HealthComponent:
      type: object
      properties:
        description:
          type: string
        status:
          type: string
    Status:
      type: object
      properties:
        description:
          type: string
        status:
          type: string
    CustomersResponseDTO:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
        is_has_previous:
          type: boolean
        is_has_next:
          type: boolean
        total:
          type: integer
          format: int64
        page_number:
          type: integer
          format: int32
        next_param:
          type: string
        previous_param:
          type: string
